# 1.
name: Test & Build

# 2.
on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

# 3.
jobs:
  main:
    runs-on: macos-latest

    # 4.
    steps:

      # 5.
      - name: Clone repository
        uses: actions/checkout@v4

      # 6.
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "18.x"

      # 7.
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.29.2'

      # 8.
      - name: Get Flutter packages
        run: |
          flutter pub get

      # 9.
      - name: Check for lints
        run: |
          flutter analyze

      # 10.
      - name: Run all tests
        run: |
          flutter test

      # 11.
      - name: Build APK
        run: |
          flutter build apk

#      # 12.
#      - name: Flutter build ipa
#        run: |
#          flutter build ipa --no-codesign
#
#      # 13.
#      - name: Compress Archives and IPAs
#        run: |
#          cd build
#          tar -czf ios_build.tar.gz ios

      # 14.
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
#            build/ios_build.tar.gz

      - name: Upload APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: 1:158385759162:android:366cd594873a7ab0c3b383
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: |
            Changes in this build:
            - Automated build from GitHub Actions
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
